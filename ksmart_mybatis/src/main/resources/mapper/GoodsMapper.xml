<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.or.ksmart37.ksmart.mybatis.mapper.GoodsMapper">
	<!-- resultMap을 사용하는 이유 name을 맵핑함으로 알아서 이름을 찾아감 -->
	<resultMap type="Goods" id="resultMapGoods">
		<result column="g_code" property="goodsCode"></result>
		<result column="g_name" property="goodsName"></result>
		<result column="g_price" property="goodsPrice"></result>
		<result column="g_seller_id" property="goodsSellerId"></result>
		<result column="g_reg_date" property="goodsRegDate"></result>
		
		<!-- Collection은 1:다 관계이다.  -->
		<!-- Association은 1:1 관계에서만 가능하다. -->
		
		<association property="member" javaType="Member">
			<id column="m_id"					property="memberId"/>
			<result column="m_pw"				property="memberPw"/>
			<result column="m_name"				property="memberName"/>
			<result column="m_level"			property="memberLevel"/>
			<result column="m_email"			property="memberEmail"/>
			<result column="m_adr"				property="memberAddr"/>
			<result column="m_reg_date"			property="memberRegDate"/>
		</association>
	</resultMap>
	<!-- /////////////////////////////////////연습///////////////////////////////// -->
	<select id="getGoodsByCode2" parameterType="String" resultMap="resultMapGoods">
	SELECT
		g_code
		, g_name
		, g_price
		, g_seller_id
		, g_reg_date
	FROM
		tb_goods
	WHERE
		g_code = #{goodsCode};
	</select>
	
	
	
	<!-- //////////////////////////////////////////////////////////////////////// -->
	
	<!-- 판매자 1:1 전체 조회 판매자 전체 조회 -->
	<select id="getGoodsList" resultMap="resultMapGoods">
		SELECT
			g.g_code
			, g.g_name
			, g.g_price
			, g.g_seller_id
			, m.m_name
		FROM
			tb_member AS m
			INNER JOIN	
			tb_goods AS g
			on
				m.m_id = g.g_seller_id
	</select>

	<!-- Update 처리하기전 상품 뽑아오기 -->
	<select id="getGoodsByCode" parameterType="String"
		resultMap="resultMapGoods">
		SELECT
		g_code
		, g_name
		, g_price
		, g_seller_id
		, g_reg_date
		FROM
		tb_goods
		WHERE
		g_code = #{goodsCode};
	</select>
	<!-- 실제 업데이트 처리 -->
	<update id="modifyGoods" parameterType="Goods">
		UPDATE tb_goods
		<trim prefix="SET" suffixOverrides=",">
			<if test="goodsName != null and goodsName neq ''.toString()">
				g_name = #{goodsName},
			</if>
			<if test="goodsPrice != null and goodsPrice neq ''.toString()">
				g_price = #{goodsPrice},
			</if>


		</trim>
		WHERE
		g_code = #{goodsCode};
	</update>

	<delete id="removeGoods" parameterType="String">
		DELETE
		FROM
			tb_goods
		WHERE
			g_code = #{goodsCode};
	</delete>
</mapper>